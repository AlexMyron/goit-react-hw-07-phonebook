{"version":3,"sources":["components/Form/Form.styled.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","components/Contacts/Contacts.styled.js","components/ListElement/ListElement.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.styled.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["FormSection","styled","form","Label","label","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","addFilter","resetFilter","getFilter","state","contacts","filter","getItems","items","getContacts","contactsList","normalizedFilter","toLowerCase","trim","includes","getVisibleContacts","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","onChange","e","currentTarget","value","resetInput","onSubmit","preventDefault","newName","isDouble","find","contact","toast","checkForDouble","type","pattern","title","required","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","List","ul","Button","button","Contact","li","TextWrapper","div","Contacts","isListEmpty","length","map","onClick","actions","Filter","autoComplete","onBlur","size","Wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","rootReducer","contactsReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.84999ac2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FormSection = styled.form`\n  width: 70%;\n  margin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n// import * as types from './phonebook-types';\n\nconst addContact = createAction(\"contact/add\", ({ name, number }) => {\n  return {\n    payload: {\n      name,\n      number,\n      id: uuidv4(),\n    },\n  };\n});\nconst deleteContact = createAction(\"contact/delete\");\nconst addFilter = createAction(\"filter/add\");\nconst resetFilter = createAction(\"filter/reset\", () => {\n  return {\n    payload: \"\",\n  };\n});\n\n// -----------\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD_CONTACT,\n//   payload: { name, number, id: uuidv4() },\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE_CONTACT,\n//   payload: contactId,\n// });\n\n// const addFilter = text => ({\n//   type: types.ADD_FILTER,\n//   payload: text,\n// });\n\n// const resetFilter = () => ({\n//   type: types.RESET_FILTER,\n//   payload: '',\n// });\n\nexport { addContact, deleteContact, addFilter, resetFilter };\n","const getFilter = (state) => state.contacts.filter;\nconst getItems = (state) => state.contacts.items;\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst getContacts = (state) => {\n  const { filter, items } = state.contacts;\n  let contactsList = [];\n  if (!filter) contactsList = items;\n  contactsList = getVisibleContacts(items, filter);\n  return contactsList;\n};\n\nexport { getContacts, getFilter, getItems };\n","import { useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Label, FormSection } from \"./Form.styled\";\nimport { addContact } from \"../../redux/phonebook/phonebook-actions\";\nimport { getItems } from \"../../redux/phonebook/phonebook-selectors\";\n\n// const Form = ({ onSubmit }) => {\nconst Form = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    const { value, name } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const checkForDouble = (newName, contacts) => {\n    const isDouble = contacts.find((contact) => contact.name === newName);\n    if (isDouble) toast(`${newName} is already in contacts`);\n    return isDouble;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (checkForDouble(name, contacts)) {\n      resetInput();\n      return;\n    }\n\n    // onSubmit({ name, number });\n    (() => dispatch(addContact({ name, number })))({ name, number });\n\n    resetInput();\n  };\n\n  return (\n    <FormSection onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          onChange={onChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <button type=\"submit\">Add contact</button>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </FormSection>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: contact => {\n//     return dispatch(addContact(contact));\n//   },\n// });\n\nexport default Form;\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: 80px;\n\n  transition: all 250ms ease;\n  &:hover,\n  :focus {\n    background-color: skyblue;\n  }\n`;\n\nexport const Contact = styled.li`\n  height: 30px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n`;\n","import PropTypes from \"prop-types\";\n// import ListElement from '../ListElement';\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { FaUser } from \"react-icons/fa\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { List } from \"./Contacts.styled\";\nimport {\n  Button,\n  Contact,\n  TextWrapper,\n} from \"../ListElement/ListElement.styled\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\n\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\n\n// const Contacts = ({ contactsList, onDeleteBtn }) => {\nconst Contacts = () => {\n  const contactsList = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const isListEmpty = contactsList.length === 0;\n  return (\n    <div>\n      {isListEmpty && <p>Your contacts List is still empty.</p>}\n      <List>\n        {contactsList &&\n          contactsList.map(({ name, number, id }) => (\n            <Contact key={id}>\n              <TextWrapper>\n                <FaUser />\n                {name}: {number}\n              </TextWrapper>\n              <Button\n                type=\"button\"\n                data-id={id}\n                onClick={() => dispatch(actions.deleteContact(id))}\n              >\n                <RiDeleteBin5Fill />\n              </Button>\n            </Contact>\n          ))}\n      </List>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  btnDelete: PropTypes.func,\n};\n\n// const getVisibleContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase().trim();\n//   return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n// };\n\n// const mapStateToProps = state => {\n//   const { filter, items } = state.contacts;\n//   let contactsList = [];\n//   if (!filter) contactsList = items;\n//   contactsList = getVisibleContacts(items, filter);\n//   return {\n//     filter,\n//     contactsList,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteBtn: id => dispatch(actions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Contacts);\nexport default Contacts;\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import { BiSearchAlt } from \"react-icons/bi\";\nimport { Label } from \"./Filter.styled\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\n// const Filter = ({ filter, contacts, onChange, resetFilter }) => {\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  // const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <Label>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={(e) => dispatch(actions.addFilter(e.currentTarget.value))}\n          value={filter}\n          autoComplete=\"off\"\n          onBlur={() => dispatch(actions.resetFilter())}\n        />\n        <BiSearchAlt size=\"18\" />\n      </Label>\n    </div>\n  );\n};\n\n// const mapStateToProps = ({ contacts: { _, filter } }) => ({ filter: filter });\n\n// const mapDispatchToProps = dispatch => ({\n//   resetFilter: () => dispatch(actions.resetFilter()),\n//   onChange: e => dispatch(actions.addFilter(e.currentTarget.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 25%;\n  padding-left: 30px;\n`;\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport Contacts from \"./components/Contacts\";\nimport Filter from \"./components/Filter\";\nimport { Wrapper } from \"./App.styled\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./phonebook-actions\";\n// import * as types from './phonebook-types';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.addFilter]: (_, { payload }) => payload,\n  [actions.resetFilter]: (_, { payload }) => payload,\n});\n\n// ----------------\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD_CONTACT:\n//       return [...state, payload];\n\n//     case types.DELETE_CONTACT:\n//       console.log(types.DELETE_CONTACT);\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.ADD_FILTER:\n//       return payload;\n//     case types.RESET_FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { applyMiddleware, combineReducers } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  // middleware: applyMiddleware(logger),\n  // devtools: process.env.NODE_ENV === 'development',\n});\n\nlet persistor = persistStore(store);\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nexport { store, persistor };\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}