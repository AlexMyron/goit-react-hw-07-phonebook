{"version":3,"sources":["components/Form/Form.styled.js","redux/phonebook/contacts-selectors.js","server-API/API-requests.js","redux/phonebook/phonebook-actions.js","components/Form/Form.js","redux/phonebook/phonebook-operations.js","components/Contacts/Contacts.styled.js","components/ListElement/ListElement.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.styled.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["FormSection","styled","form","Label","label","getItems","state","contacts","items","getFilter","filter","getContacts","createSelector","contactsList","normalizedFilter","toLowerCase","trim","name","includes","getVisibleContacts","getLoader","isLoading","BASE_URL","fetchContacts","a","axios","get","response","data","console","error","deleteContact","id","delete","postContact","post","log","message","fetchContactsSuccess","createAction","fetchContactsError","fetchContactsRequest","deleteContactRequest","deleteContactSuccess","deleteContactError","postContactRequest","postContactSuccess","postContactError","addFilter","resetFilter","Form","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","onChange","e","currentTarget","value","resetInput","onSubmit","preventDefault","newName","isDouble","find","contact","toast","checkForDouble","actions","fetchAPI","postedContact","type","pattern","title","required","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","List","ul","Button","button","Contact","li","TextWrapper","div","Contacts","useEffect","handleClick","phonebookOperations","isListEmpty","length","map","onClick","Filter","autoComplete","size","Wrapper","props","transparent","StyledLoader","Loader","App","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","combineReducers","rootReducer","contactsReducer","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6afff98e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FormSection = styled.form`\n  width: 70%;\n  margin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n`;\n","import { createSelector } from 'reselect';\n\nconst getItems = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst getContacts = createSelector([getFilter, getItems], (filter, items) => {\n  let contactsList = [];\n  if (!filter) return items;\n  contactsList = getVisibleContacts(items, filter);\n  return contactsList;\n});\n\nconst getLoader = state => state.contacts.isLoading;\n\nexport { getContacts, getFilter, getItems, getLoader };\n","import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3000/contacts';\n\nexport const fetchContacts = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const deleteContact = async id => {\n  try {\n    return await axios.delete(`${BASE_URL}/${id}`);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const postContact = async data => {\n  try {\n    const response = await axios.post(`${BASE_URL}`, data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\nexport const fetchContactsRequest = createAction('contacts/fetchContactRequest');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const postContactRequest = createAction('contact/postContactRequest');\nexport const postContactSuccess = createAction('contacts/postContactSuccess');\nexport const postContactError = createAction('contacts/postContactError');\n\nexport const addFilter = createAction('filter/add');\nexport const resetFilter = createAction('filter/reset');\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Label, FormSection } from './Form.styled';\nimport { getItems } from '../../redux/phonebook/contacts-selectors';\nimport * as phonebookOperations from '../../redux/phonebook/phonebook-operations';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getItems);\n\n  const onChange = e => {\n    const { value, name } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkForDouble = (newName, contacts) => {\n    const isDouble = contacts.find(contact => contact.name === newName);\n    if (isDouble) toast(`${newName} is already in contacts`);\n    return isDouble;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkForDouble(name, contacts)) {\n      resetInput();\n      return;\n    }\n\n    (() => dispatch(phonebookOperations.postContact({ name, number })))({ name, number });\n\n    resetInput();\n  };\n\n  return (\n    <FormSection onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          onChange={onChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <button type=\"submit\">Add contact</button>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </FormSection>\n  );\n};\n\nexport default Form;\n","import * as fetchAPI from '../../server-API/API-requests';\nimport * as actions from './phonebook-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const contacts = await fetchAPI.fetchContacts();\n    dispatch(actions.fetchContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await fetchAPI.deleteContact(id);\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n};\n\nexport const postContact = data => async dispatch => {\n  dispatch(actions.postContactRequest());\n\n  try {\n    const postedContact = await fetchAPI.postContact(data);\n    dispatch(actions.postContactSuccess(postedContact));\n  } catch (error) {\n    dispatch(actions.postContactError(error));\n  }\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: 80px;\n\n  transition: all 250ms ease;\n  &:hover,\n  :focus {\n    background-color: skyblue;\n  }\n`;\n\nexport const Contact = styled.li`\n  height: 30px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaUser } from 'react-icons/fa';\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\nimport { List } from './Contacts.styled';\nimport { getContacts } from '../../redux/phonebook/contacts-selectors';\nimport * as phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport { Button, Contact, TextWrapper } from '../ListElement/ListElement.styled';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n    \n  }, [dispatch]);\n\n  const contactsList = useSelector(getContacts);\n\n  const handleClick = id => {\n    dispatch(actions.resetFilter());\n    return dispatch(phonebookOperations.deleteContact(id));\n  };\n\n  const isListEmpty = contactsList.length === 0;\n  return (\n    <div>\n      {isListEmpty && <p>Your contacts List is still empty.</p>}\n      <List>\n        {contactsList &&\n          contactsList.map(({ name, number, id }) => (\n            <Contact key={id}>\n              <TextWrapper>\n                <FaUser />\n                {name}: {number}\n              </TextWrapper>\n              <Button type=\"button\" data-id={id} onClick={() => handleClick(id)}>\n                <RiDeleteBin5Fill />\n              </Button>\n            </Contact>\n          ))}\n      </List>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  btnDelete: PropTypes.func,\n};\n\nexport default Contacts;\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import { BiSearchAlt } from 'react-icons/bi';\nimport { Label } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport { getFilter, getItems } from '../../redux/phonebook/contacts-selectors';\n\nconst Filter = () => {\n  const contacts = useSelector(getItems);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {contacts.length > 1 && (\n        <>\n          <h3>Find contacts by name</h3>\n          <Label>\n            <input\n              type=\"text\"\n              name=\"filter\"\n              onChange={e => dispatch(actions.addFilter(e.currentTarget.value))}\n              value={filter}\n              autoComplete=\"off\"\n            />\n            <BiSearchAlt size=\"18\" />\n          </Label>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nimport Loader from 'react-loader-spinner';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 25%;\n  margin-left: 200px;\n\n  opacity: ${props => (props.transparent ? 0.5 : 1)};\n`;\n\nexport const StyledLoader = styled(Loader)`\n  position: absolute;\n  top: 100px;\n  left: 100px;\n`;\n","import { useSelector } from 'react-redux';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport { Wrapper, StyledLoader } from './App.styled';\nimport { getLoader } from './redux/phonebook/contacts-selectors';\n\nconst App = () => {\n  const isLoading = useSelector(getLoader);\n\n  return (\n    <Wrapper transparent={isLoading}>\n      {isLoading && (\n        <StyledLoader type=\"ThreeDots\" color=\"#2c2c2c\" height={100} width={100} timeout={3000} />\n      )}\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n  [actions.postContactSuccess]: (state, { payload }) => [...state, payload],\n});\n\nconst isLoading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n  [actions.postContactRequest]: () => true,\n  [actions.postContactSuccess]: () => false,\n  [actions.postContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.addFilter]: (_, { payload }) => payload,\n  [actions.resetFilter]: () => '',\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n});\n","import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nexport default configureStore({\n  reducer: rootReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}